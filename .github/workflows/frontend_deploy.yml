name: Deploy Frontend to Local (dev) or AWS ECS (prod)

on:
  push:
    branches:
      - prod
      - dev
  pull_request:
    branches:
      - prod
      - dev
env:
  AWS_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  ECR_REPO: frontend_repo
  ECS_CLUSTER: proyecto_final_mlops
  ECS_SERVICE: frontend-service-uhclo85d
  PORT: 3000

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set environment variables based on branch
        id: set-env
        run: |
          if [[ "${{ github.ref_name }}" == "prod" ]]; then
            echo "IMAGE_TAG=frontend-prod" >> $GITHUB_ENV
            echo "BACKEND_URL=http://alb-backend-predictor-1055852265.us-east-2.elb.amazonaws.com" >> $GITHUB_ENV
          else
            echo "IMAGE_TAG=frontend-dev" >> $GITHUB_ENV
            echo "BACKEND_URL=http://localhost:8000" >> $GITHUB_ENV
          fi

      - name: Build Docker image with env vars
        run: |
           docker build \
           --build-arg NEXT_PUBLIC_BACKEND_URL=$BACKEND_URL \
           -t $IMAGE_TAG . 

      - name: Run Docker container with correct port
        run: |
          docker run -d -e PORT=${{ env.PORT }} \
            -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
            -e AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
            -e AWS_REGION=${{ secrets.AWS_DEFAULT_REGION }} \
            -p $PORT:$PORT $IMAGE_TAG

      - name: Configure AWS credentials
        if: github.ref_name == 'prod' || github.base_ref == 'prod'
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Authenticate Docker to Amazon ECR
        if: github.ref_name == 'prod' || github.base_ref == 'prod'      
        run: |
          aws ecr get-login-password --region $AWS_REGION | \
          docker login --username AWS --password-stdin \
          $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

      - name: Tag and push image to ECR
        if: github.ref_name == 'prod' || github.base_ref == 'prod'
        run: |
          IMAGE_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO
          docker tag $IMAGE_TAG:latest $IMAGE_URI:latest
          docker push $IMAGE_URI:latest

      - name: Force new deployment on ECS
        if: github.ref_name == 'prod' || github.base_ref == 'prod'     
        run: |
          aws ecs update-service \
            --cluster $ECS_CLUSTER \
            --service $ECS_SERVICE \
            --force-new-deployment \
            --region $AWS_REGION