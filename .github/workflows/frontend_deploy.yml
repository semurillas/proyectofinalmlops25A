name: Deploy Frontend to AWS ECS

on:
  push:
    paths:
      - 'frontend-onnx/**'
  pull_request:
    paths:
      - 'frontend-onnx/**'

env:
  AWS_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  IMAGE_TAG: frontend
  ECR_REPO: frontend_repo
  ECS_CLUSTER: proyecto_final_mlops
  ECS_SERVICE: frontend_service

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Authenticate Docker to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | \
          docker login --username AWS --password-stdin \
          $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

      - name: Build Docker image
        run: |
          docker build -t $IMAGE_TAG .

      - name: Tag and push image to ECR
        run: |
          IMAGE_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO
          docker tag $IMAGE_TAG:latest $IMAGE_URI:latest
          docker push $IMAGE_URI:latest

      - name: Force new deployment on ECS
        run: |
          aws ecs update-service \
            --cluster $ECS_CLUSTER \
            --service $ECS_SERVICE \
            --force-new-deployment \
            --region $AWS_REGION
