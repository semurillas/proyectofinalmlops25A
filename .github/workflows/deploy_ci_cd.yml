name: Docker CI for ONNX Predictor

on:
  push:
    branches: [ dev, prod ]
  pull_request:
    branches: [ prod ]

jobs:
  test-model:
    runs-on: ubuntu-latest
  
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest boto3 python-dotenv

      - name: Run ONNX model tests
        run: |
          pytest test/test_onnx_model.py -v
  
  build-and-promote:
    needs: test-model
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set environment variables by branch
        run: |
          if [[ "${{ github.ref_name }}" == "prod" ]]; then
            echo "PORT=8001" >> $GITHUB_ENV
            echo "IMAGE_TAG=onnx_model_prod" >> $GITHUB_ENV
          else
            echo "PORT=8000" >> $GITHUB_ENV
            echo "IMAGE_TAG=onnx_model_dev" >> $GITHUB_ENV
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image with tag
        run: |
          docker build -t $IMAGE_TAG .

      - name: Run Docker container with correct port
        run: |
          docker run -d -e PORT=${{ env.PORT }} \
            -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
            -e AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
            -e AWS_REGION=${{ secrets.AWS_DEFAULT_REGION }} \
            -p $PORT:$PORT $IMAGE_TAG
      
      - name: Authenticate Docker to Amazon ECR
        if: github.ref_name == 'prod' || github.base_ref == 'prod'
        run: |
          aws ecr get-login-password --region $AWS_REGION | \
          docker login --username AWS --password-stdin \
          ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com

      - name: Tag and push image to ECR
        if: github.ref_name == 'prod' || github.base_ref == 'prod'
        run: |
          IMAGE_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com/backend_repo          docker tag $IMAGE_TAG:latest $IMAGE_URI:latest
          docker push $IMAGE_URI:latest

      - name: Update ECS service
        if: github.ref_name == 'prod' || github.base_ref == 'prod'
        run: |
          aws ecs update-service \
            --cluster proyecto_final_mlops \
            --service backend_predictor-service \
            --force-new-deployment \
            --region $AWS_REGION
